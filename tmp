; ModuleID = 'Context'
source_filename = "Context"

declare void @print(ptr addrspace(5))

declare void @printd(i32)

declare void @printch(i8)

define void @mem.cpy(ptr addrspace(5) %0, ptr addrspace(5) %1, i32 %2) {
  ret void
}

define i1 @mem.eql(ptr addrspace(5) %0, ptr addrspace(5) %1, i32 %2) {
  %a = alloca ptr addrspace(5), align 8
  %b = alloca ptr addrspace(5), align 8
  %size = alloca i32, align 4
  store i32 %2, ptr %size, align 4
  store ptr addrspace(5) %1, ptr %a, align 8
  store ptr addrspace(5) %0, ptr %b, align 8
  %readtmp = load ptr addrspace(5), ptr %a, align 8
  %readtmp1 = load ptr addrspace(5), ptr %b, align 8
  %neqtmp = icmp eq ptr addrspace(5) %readtmp1, %readtmp
  %ifcond = icmp ne i1 %neqtmp, false
  br label %3
  br i1 %ifcond, label %ifbody, label %ifmerge

ifbody:                                           ; preds = %3
  ret i1 true
  br label %ifmerge

ifmerge:                                          ; preds = %ifbody, %3
  br label %dobody

dobody:                                           ; preds = %ifmerge12, %dobody, %ifmerge
  %readtmp2 = load i32, ptr %size, align 4
  %subtmp = sub i32 %readtmp2, 1
  store i32 %subtmp, ptr %size, align 4
  %readtmp3 = load ptr addrspace(5), ptr %a, align 8
  %readtmp4 = load i32, ptr %size, align 4
  %idxtmp = getelementptr inbounds [1 x i8], ptr addrspace(5) %readtmp3, i32 %readtmp4
  %readtmp5 = load i8, ptr addrspace(5) %idxtmp, align 1
  %readtmp6 = load ptr addrspace(5), ptr %b, align 8
  %readtmp7 = load i32, ptr %size, align 4
  %idxtmp8 = getelementptr inbounds [1 x i8], ptr addrspace(5) %readtmp6, i32 %readtmp7
  %readtmp9 = load i8, ptr addrspace(5) %idxtmp8, align 1
  %eqtmp = icmp ne i8 %readtmp9, %readtmp5
  %ifcond10 = icmp ne i1 %eqtmp, false
  br label %dobody
  br i1 %ifcond10, label %ifbody11, label %ifmerge12

domerge:                                          ; preds = %ifmerge12
  ret i1 true

ifbody11:                                         ; preds = %dobody
  ret i1 false
  br label %ifmerge12

ifmerge12:                                        ; preds = %ifbody11, %dobody
  %readtmp13 = load i32, ptr %size, align 4
  %lttmp = icmp ugt i32 %readtmp13, 0
  %docond = icmp ne i1 %lttmp, false
  br i1 %docond, label %dobody, label %domerge
}

define i32 @main() {
  %ptr = alloca [4 x i8], align 1
  store [4 x i8] c"lol\00", ptr %ptr, align 1
  %ptr1 = alloca [4 x i8], align 1
  store [4 x i8] c"lol\00", ptr %ptr1, align 1
  %calltmp = call i1 @mem.eql(ptr %ptr, ptr %ptr1, i32 3)
  %ifcond = icmp ne i1 %calltmp, false
  br label %0
  br i1 %ifcond, label %ifbody, label %ifmerge

ifbody:                                           ; preds = %0
  %ptr2 = alloca [8 x i8], align 1
  store [8 x i8] c"succ eq\00", ptr %ptr2, align 1
  %calltmp3 = call void @print(ptr %ptr2)
  br label %ifmerge

ifmerge:                                          ; preds = %ifmerge, %ifbody, %0
  %ptr4 = alloca [5 x i8], align 1
  store [5 x i8] c"fdsa\00", ptr %ptr4, align 1
  %calltmp5 = call i1 @mem.eql(ptr %ptr4, ptr %ptr4, i32 3)
  %ifcond6 = icmp ne i1 %calltmp5, false
  br label %ifmerge
  br i1 %ifcond6, label %ifbody7, label %ifmerge8

ifbody7:                                          ; preds = %ifmerge
  %ptr9 = alloca [10 x i8], align 1
  store [10 x i8] c"succ same\00", ptr %ptr9, align 1
  %calltmp10 = call void @print(ptr %ptr9)
  br label %ifmerge8

ifmerge8:                                         ; preds = %ifmerge8, %ifbody7, %ifmerge
  %ptr11 = alloca [4 x i8], align 1
  store [4 x i8] c"lol\00", ptr %ptr11, align 1
  %ptr12 = alloca [4 x i8], align 1
  store [4 x i8] c"lom\00", ptr %ptr12, align 1
  %calltmp13 = call i1 @mem.eql(ptr %ptr11, ptr %ptr12, i32 3)
  %nottmp = xor i1 %calltmp13, true
  %ifcond14 = icmp ne i1 %nottmp, false
  br label %ifmerge8
  br i1 %ifcond14, label %ifbody15, label %ifmerge16

ifbody15:                                         ; preds = %ifmerge8
  %ptr17 = alloca [9 x i8], align 1
  store [9 x i8] c"succ neq\00", ptr %ptr17, align 1
  %calltmp18 = call void @print(ptr %ptr17)
  br label %ifmerge16

ifmerge16:                                        ; preds = %ifbody15, %ifmerge8
  ret i32 0
}
