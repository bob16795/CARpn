def proc getShaders : ShaderFile$* {
  ShaderFile$* result

  result ShaderFile.SIZE 2 calloc =

  result@[0].contents u8$*$*.SIZE 1 calloc =
  result@[0].kind 35633 =
  result@[0].count 1 =
  result@[0].contents@ u8$**'
  "#version 330 core
layout (location = 0) in vec3 aVertex;
layout (location = 1) in vec2 aTexCoords;
layout (location = 2) in vec4 aColor;
uniform mat4 projection;
out vec2 texCoords;
out vec4 tintColor;
void main()
{
    gl_Position = projection * vec4(aVertex.xyz, 1.0);
    texCoords = aTexCoords;
    tintColor = aColor;
}" =

  result@[1].contents u8$*$*.SIZE 1 calloc =
  result@[1].kind 35632 =
  result@[1].count 1 =
  result@[1].contents@ u8$**'
  "#version 330 core

in vec2 texCoords;
in vec4 tintColor;

out vec4 color;

uniform sampler2D tex;

void main() {
  color = texture(tex, texCoords);
}" =

  result@
}

def proc main : i32 {
  SpriteBatch sb
  Drawer drawer
  Sprite sprite
  GFXContext* ctx
  Shader* shd
  Texture* tex

  ctx GFXContext.init =

  shd getShaders 2 Shader.new =
  tex "lol.png" Texture.new =

  shd@ 640.0 480.0 Vec2.new Shader.setSize

  drawer.self sprite =
  drawer.getVerts (Sprite.getVerts) =
  drawer.tex tex@ =

  sb SpriteBatch.init

  sprite.size.x 100.0 =
  sprite.size.y 40.0 =

  sprite.pos.x 100.0 =
  sprite.pos.y 100.0 =

  Vec2 vel

  vel.x -1.0 =
  vel.y -1.0 =

  do {
    sb drawer SpriteBatch.draw

    ctx@ GFXContext.clear
    shd@.id@ glUseProgram
    sb SpriteBatch.finish
    ctx@ GFXContext.swap
      
    sprite.pos.x sprite.pos.x@ vel@.x + =
    sprite.pos.y sprite.pos.y@ vel@.y + =

    sprite@.pos.x 0.0 < if {
      vel.x vel.x@ -1.0 * =
    }
    sprite@.pos.y 0.0 < if {
      vel.y vel.y@ -1.0 * =
    }

    sprite@.pos.x 540.0 > if {
      vel.x vel.x@ -1.0 * =
    }
    sprite@.pos.y 440.0 > if {
      vel.y vel.y@ -1.0 * =
    }

    ctx@ GFXContext.poll
  }

  sb SpriteBatch.deinit
  ctx@ GFXContext.free

  "done" printf

  0
}
